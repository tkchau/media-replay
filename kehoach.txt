
python flask restful (create account , transfer to another account , swap coin , get free coin)

ssl + domain + nginx for API

UI simple = Flask python (demo)

tim doi tac

______________________________________________________________
hyper ledger sawtooth

Install – 10%
Install Sawtooth packages
Start component services
Generate keys
Register validator
Configure peering
Verify install and fix if necessary
Connect transaction processor to validator
Create genesis block
Verify system meets hardware requirements

Configuration – 25%
Configure validator peering and network
Configure consensus
Configure logging
Configure REST API
Configure layer 3 network ports/firewall
Configure metrics
Configure transaction processor endpoint
Configure systemd services
Choose parallel / sync scheduler
Configure storage paths
Configure Sawtooth CLI

Permissioning, Identity Management, and Security – 20%
Identify network ID / system / peer ID
Permission a transaction processor
Policy management
Validator registration
System permissions
Configure validator local policy file
Validator key permissioning
Role management: transactor roles
Role management: network roles
Configure transactor permissions
Secure connections between components
Use a proxy server to authorize the REST API
Securing connecting between validators
Manage validator keys and secrets

Lifecycle – 25%
Create new network
Joining an existing network
Remove validator node from the network
Rejoin network after network failure
Restart validator after crash or maintenance
Restart components after crash or maintenance
Add new transaction processor
Changing consensus mode
Change network configuration
Update Sawtooth software
Update transaction processor version

Troubleshooting – 20%
Troubleshoot network communication
Troubleshoot REST API
Troubleshoot consensus
Troubleshoot transaction processor
Identify and resolve chain fork
Fix validator
Enable Sawtooth monitoring
Monitor network topology
Troubleshoot deployment
Troubleshoot resource constra
-------------------------------------------------------------------------------
Hyper ledger fabric

Application Lifecycle Management – 20%

Install and Instantiate chaincode package
Configure endorsement policy
Define collection policy for private data
Modify or upgrade chaincode

Install and Configure Network – 25%
Modify the world state database configuration
Define initial multi-org configuration policy
Configure Ordering service (Kafka)
Configure Hyperledger Fabric containers
Define network config options (block creation options, etc)
Enable TLS for communication
Generate genesis block
Configure service discovery node (e.g. peer and orderer addresses)

Diagnostics and Troubleshooting – 15%
Query and analyse peer logs
Query and analyse CA logs
Query and analyse Orderer logs
Query and analyse chaincode logs

Membership Service Provider – 20%
Configure ACL
Create end user identity
Revoke an identity
Configure and start Hyperledger Fabric CA
Configure Hyperledger Fabric for hardware security module
Network Maintenance and Operations – 20%
Add a peer to existing organization
Create a channel
Add an org to a channel
Update channel configuration
Update a Hyperledger Fabric instance

